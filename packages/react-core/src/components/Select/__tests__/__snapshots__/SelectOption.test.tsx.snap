// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`select options checked renders with checked successfully 1`] = `
<ContextConsumer>
  <Component />
</ContextConsumer>
`;

exports[`select options disabled renders disabled successfully 1`] = `
<SelectOption
  className=""
  component="button"
  id="option-1"
  index={0}
  inputId=""
  isChecked={false}
  isDisabled={true}
  isFavorite={null}
  isLastOptionBeforeFooter={[Function]}
  isLoad={false}
  isLoading={false}
  isNoResultsOption={false}
  isPlaceholder={false}
  isSelected={false}
  keyHandler={[Function]}
  onClick={[Function]}
  sendRef={
    [MockFunction] {
      "calls": Array [
        Array [
          null,
          null,
          null,
          0,
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  setViewMoreNextIndex={[Function]}
  value="test"
>
  <li
    className="pf-c-select__menu-wrapper"
    id="option-1"
    role="presentation"
  >
    <button
      aria-selected={null}
      className="pf-c-select__menu-item pf-m-disabled"
      onClick={[Function]}
      onKeyDown={[Function]}
      role="option"
      type="button"
    >
      test
    </button>
  </li>
</SelectOption>
`;

exports[`select options is selected renders selected successfully 1`] = `
<ContextConsumer>
  <Component />
</ContextConsumer>
`;

exports[`select options renders custom component 1`] = `
<div>
  <li
    class="pf-c-select__menu-wrapper"
    id="option-1"
    role="presentation"
  >
    <div
      class="pf-c-select__menu-item"
      role="option"
      type="button"
    >
      <div>
        test display
      </div>
    </div>
  </li>
</div>
`;

exports[`select options renders with custom display and custom user object successfully 1`] = `
<div>
  <li
    class="pf-c-select__menu-wrapper"
    id="option-1"
    role="presentation"
  >
    <button
      class="pf-c-select__menu-item"
      role="option"
      type="button"
    >
      <div>
        test display
      </div>
    </button>
  </li>
</div>
`;

exports[`select options renders with custom display successfully 1`] = `
<div>
  <li
    class="pf-c-select__menu-wrapper"
    id="option-1"
    role="presentation"
  >
    <button
      class="pf-c-select__menu-item"
      role="option"
      type="button"
    >
      <div>
        test display
      </div>
    </button>
  </li>
</div>
`;

exports[`select options renders with custom user object successfully 1`] = `
<div>
  <li
    class="pf-c-select__menu-wrapper"
    id="option-1"
    role="presentation"
  >
    <button
      class="pf-c-select__menu-item"
      role="option"
      type="button"
    >
      Mr.: Test User
    </button>
  </li>
</div>
`;

exports[`select options renders with description successfully 1`] = `
<div>
  <li
    class="pf-c-select__menu-wrapper"
    id="option-1"
    role="presentation"
  >
    <button
      class="pf-c-select__menu-item pf-m-description"
      role="option"
      type="button"
    >
      <span
        class="pf-c-select__menu-item-main"
      >
        test
      </span>
      <span
        class="pf-c-select__menu-item-description"
      >
        This is a description
      </span>
    </button>
  </li>
</div>
`;

exports[`select options renders with item count successfully 1`] = `
<div>
  <li
    class="pf-c-select__menu-wrapper"
    id="option-1"
    role="presentation"
  >
    <button
      class="pf-c-select__menu-item"
      role="option"
      type="button"
    >
      <span
        class="pf-c-select__menu-item-row"
      >
        <span
          class="pf-c-select__menu-item-text"
        >
          test
        </span>
        <span
          class="pf-c-select__menu-item-count"
        >
          3
        </span>
      </span>
    </button>
  </li>
</div>
`;

exports[`select options renders with value parameter successfully 1`] = `
<SelectOption
  className=""
  component="button"
  id="option-1"
  index={0}
  inputId=""
  isChecked={false}
  isDisabled={false}
  isFavorite={null}
  isLastOptionBeforeFooter={[Function]}
  isLoad={false}
  isLoading={false}
  isNoResultsOption={false}
  isPlaceholder={false}
  isSelected={false}
  keyHandler={[Function]}
  onClick={[Function]}
  sendRef={
    [MockFunction] {
      "calls": Array [
        Array [
          <button
            class="pf-c-select__menu-item"
            role="option"
            type="button"
          >
            test
          </button>,
          null,
          <li
            class="pf-c-select__menu-wrapper"
            id="option-1"
            role="presentation"
          >
            <button
              class="pf-c-select__menu-item"
              role="option"
              type="button"
            >
              test
            </button>
          </li>,
          0,
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  setViewMoreNextIndex={[Function]}
  value="test"
>
  <li
    className="pf-c-select__menu-wrapper"
    id="option-1"
    role="presentation"
  >
    <button
      aria-selected={null}
      className="pf-c-select__menu-item"
      onClick={[Function]}
      onKeyDown={[Function]}
      role="option"
      type="button"
    >
      test
    </button>
  </li>
</SelectOption>
`;
